{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/components/quiosco/Category.tsx", "../app/context/quiosco/QuioscoContext.tsx", "../app/context/quiosco/QuioscoProvider.tsx", "../app/context/quiosco/quioscoReducer.ts", "../app/components/ui/Sidebar.tsx", "../app/components/ui/Steps.tsx", "../app/components/ui/ModalProduct.tsx", "../app/utils/db.server.ts", "../app/routes/summary.tsx", "../app/components/quiosco/ProductSummary.tsx", "../app/routes/index.tsx", "../app/components/quiosco/Product.tsx", "../app/routes/total.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import type { EntryContext } from '@remix-run/node';\nimport { RemixServer } from '@remix-run/react';\nimport { renderToString } from 'react-dom/server';\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set('Content-Type', 'text/html');\n\n  return new Response('<!DOCTYPE html>' + markup, {\n    headers: responseHeaders,\n    status: responseStatusCode,\n  });\n}\n", "import {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLoaderData,\n} from '@remix-run/react';\n\nimport type { MetaFunction, LinksFunction, LoaderArgs } from '@remix-run/node';\nimport styles from './tailwind.css';\nimport { Steps, Sidebar } from '~/components/ui';\nimport { QuioscoProvider } from './context/quiosco/QuioscoProvider';\nimport ModalProduct from './components/ui/ModalProduct';\nimport { ToastContainer } from 'react-toastify';\nimport toastStyles from 'react-toastify/dist/ReactToastify.min.css';\nimport { db } from '~/utils/db.server';\n\nexport const meta: MetaFunction = () => ({\n  charset: 'utf-8',\n  viewport: 'width=device-width,initial-scale=1',\n});\n\nexport const loader = async (args: LoaderArgs) => {\n  const categories = await db.category.findMany();\n  return { categories };\n};\n\nexport const links: LinksFunction = () => [\n  { rel: 'stylesheet', href: styles },\n  { rel: 'stylesheet', href: toastStyles },\n];\n\nexport default function App() {\n  const { categories } = useLoaderData<typeof loader>();\n\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"\">\n        <QuioscoProvider>\n          <section className=\"md:flex\">\n            <aside className=\"h-screen overflow-y-scroll md:w-4/12 xl:w-1/4 2xl:w-1/5\">\n              <Sidebar categories={categories} />\n            </aside>\n            <main className=\"h-screen overflow-y-scroll md:w-8/12 xl:w-3/4 2xl:w-4/5\">\n              <section className=\"p-10\">\n                <Steps />\n                <Outlet />\n              </section>\n            </main>\n          </section>\n\n          <ModalProduct />\n          <ToastContainer />\n        </QuioscoProvider>\n\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import { useNavigate, useParams } from '@remix-run/react';\nimport { useContext } from 'react';\nimport { QuioscoContext } from '~/context/quiosco';\ntype Props = {\n  name: string;\n  icon: string;\n  id: number;\n};\n\nfunction Category({ name, icon, id }: Props) {\n  const navigate = useNavigate();\n  const { pathname } = useParams();\n  const { categorySelected, setCategorySelected } = useContext(QuioscoContext);\n\n  return (\n    <button\n      className={`\n       ${categorySelected?.id === id && 'bg-amber-400'}\n       flex items-center gap-4 w-full border p-5 hover:bg-amber-400 hover:cursor-pointer`}\n      onClick={() => {\n        if (pathname !== '/') {\n          navigate('/');\n        }\n        setCategorySelected({\n          id,\n          name,\n          icon,\n        });\n        // getCategoryById(id)\n      }}\n    >\n      <figure>\n        <img\n          width={70}\n          height={70}\n          src={`/assets/img/icono_${icon}.svg`}\n          alt=\"Imagen icono\"\n        />\n      </figure>\n      <h2 className=\"text-2xl font-bold \">{name}</h2>\n    </button>\n  );\n}\n\nexport { Category };\n", "import type { Category, Product } from '@prisma/client';\nimport { createContext } from 'react';\nimport type { NewOrderType } from './';\n\nexport type CategorySelectedType = Category & {\n  products?: Product[];\n};\n\nexport type QuioscoContextType = {\n  categorySelected: CategorySelectedType;\n  productModal: boolean;\n  productSelected?: Product;\n  orders: NewOrderType[];\n  totalPrice: number;\n\n  // methods\n  setCategorySelected: (categorySelected: CategorySelectedType) => void;\n  toggleProductModal: () => void;\n  setProductSelected: (productSelected: Product) => void;\n  handleUpdateOrders: (product: NewOrderType) => void;\n  handleDeleteProduct: (productId: number) => void;\n  handleEditQuantities: (productId: number, quantity: number) => void;\n};\n\nexport const QuioscoContext = createContext({} as QuioscoContextType);\n", "import { useReducer, useEffect } from 'react';\nimport { QuioscoContext, quioscoReducer } from './';\nimport type { Product, Category } from '@prisma/client';\nimport type { CategorySelectedType } from './';\nimport { toast } from 'react-toastify';\n\nexport type CategoriesType = Category & {\n  products: Product[];\n};\n\nexport type NewOrderType = {\n  id: number;\n  name: string;\n  price: number;\n  quantity: number;\n  image: string;\n};\n\nexport type OrderDataType = Product & { quantity: number };\n\nexport type QuioscoState = {\n  categorySelected: CategorySelectedType;\n  productModal: boolean;\n  productSelected?: Product;\n  orders: NewOrderType[];\n  totalPrice: number;\n};\n\nconst quiosco_initial_state: QuioscoState = {\n  categorySelected: {\n    id: 1,\n    name: 'Caf\u00E9',\n    icon: 'cafe',\n    products: [],\n  },\n  productSelected: undefined,\n  productModal: false,\n  orders: [],\n  totalPrice: 0,\n};\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const QuioscoProvider = ({ children }: Props) => {\n  const [state, dispatch] = useReducer(quioscoReducer, quiosco_initial_state);\n  // const navigate = useNavigate()\n\n  useEffect(() => {\n    const totalPrice = state.orders.reduce(\n      (prev, order) => order.quantity * order.price + prev,\n      0\n    );\n    dispatch({ type: 'SET_TOTAL_PRICE', payload: totalPrice });\n  }, [state.orders]);\n\n  // ACTIONS\n  const setCategorySelected = (category: CategorySelectedType) => {\n    dispatch({\n      type: 'SET_CATEGORY_SELECTED',\n      payload: category,\n    });\n  };\n\n  const toggleProductModal = () => {\n    dispatch({\n      type: 'TOGGLE_PRODUCT_MODAL',\n      payload: !state.productModal,\n    });\n  };\n  const setProductSelected = (product: Product) => {\n    dispatch({\n      type: 'SET_PRODUCT_SELECTED',\n      payload: product,\n    });\n  };\n\n  const handleUpdateOrders = (product: NewOrderType) => {\n    const isSameProduct = state.orders.some((order) => order.id === product.id);\n\n    if (isSameProduct) {\n      const newOrders = state.orders.map((order) => {\n        if (order.id !== product.id) return order;\n\n        order.quantity += product.quantity;\n\n        return order;\n      });\n      dispatch({\n        type: 'UPDATE_ORDERS',\n        payload: newOrders,\n      });\n      return;\n    }\n\n    const orders = [...state.orders, product];\n    toast.success(`${product.name} agregado al carrito`);\n    dispatch({\n      type: 'UPDATE_ORDERS',\n      payload: orders,\n    });\n  };\n\n  const handleDeleteProduct = (productId: number) => {\n    const newOrders = state.orders.filter((order) => order.id !== productId);\n    dispatch({\n      type: 'UPDATE_ORDERS',\n      payload: newOrders,\n    });\n  };\n\n  const handleEditQuantities = (productId: number, quantity: number) => {\n    const newOrders = state.orders.map((order) => {\n      if (order.id !== productId) return order;\n\n      order.quantity = quantity;\n\n      return order;\n    });\n\n    dispatch({\n      type: 'UPDATE_ORDERS',\n      payload: newOrders,\n    });\n  };\n\n  return (\n    <QuioscoContext.Provider\n      value={{\n        ...state,\n\n        // methods\n        setCategorySelected,\n        toggleProductModal,\n        setProductSelected,\n        handleUpdateOrders,\n        handleDeleteProduct,\n        handleEditQuantities,\n      }}\n    >\n      {children}\n    </QuioscoContext.Provider>\n  );\n};\n", "import type { QuioscoState } from './';\nimport type { Product } from '@prisma/client';\nimport type { CategorySelectedType } from './QuioscoContext';\nimport type { NewOrderType } from './';\n\ntype QuioscoActionType =\n  | {\n      type: 'SET_CATEGORY_SELECTED';\n      payload: CategorySelectedType;\n    }\n  | {\n      type: 'TOGGLE_PRODUCT_MODAL';\n      payload: boolean;\n    }\n  | {\n      type: 'SET_PRODUCT_SELECTED';\n      payload: Product;\n    }\n  | {\n      type: 'UPDATE_ORDERS';\n      payload: NewOrderType[];\n    }\n  | {\n      type: 'SET_TOTAL_PRICE';\n      payload: number;\n    };\n\nconst quioscoReducer = (state: QuioscoState, action: QuioscoActionType) => {\n  switch (action.type) {\n    case 'SET_CATEGORY_SELECTED':\n      return {\n        ...state,\n        categorySelected: action.payload,\n      };\n    case 'TOGGLE_PRODUCT_MODAL':\n      return {\n        ...state,\n        productModal: action.payload,\n      };\n    case 'SET_PRODUCT_SELECTED':\n      return {\n        ...state,\n        productSelected: action.payload,\n      };\n    case 'UPDATE_ORDERS':\n      return {\n        ...state,\n        orders: action.payload,\n      };\n    case 'SET_TOTAL_PRICE':\n      return {\n        ...state,\n        totalPrice: action.payload,\n      };\n    default:\n      return state;\n  }\n};\nexport { quioscoReducer };\n", "import type { Category } from '@prisma/client';\nimport { Category as CategoryComponent } from '~/components/quiosco/Category';\n\ntype Props = {\n  categories: Category[];\n};\n\nfunction Sidebar({ categories }: Props) {\n  return (\n    <>\n      <figure className=\"flex justify-center\">\n        <img width={150} height={50} src=\"/assets/img/logo.svg\" alt=\"\" />\n      </figure>\n      <nav className=\"mt-10\">\n        {categories.map((category) => (\n          <CategoryComponent key={category.id} {...category} />\n        ))}\n      </nav>\n    </>\n  );\n}\n\nexport { Sidebar };\n", "import { useLocation, useNavigate } from '@remix-run/react';\n\nconst steps = [\n  {\n    step: 1,\n    title: 'Elige tu producto',\n    url: '/',\n    name: 'Men\u00FA',\n  },\n  {\n    step: 2,\n    name: 'Resumen',\n    url: '/summary',\n  },\n  {\n    step: 3,\n    name: 'Datos y total del pedido',\n    url: '/total',\n  },\n];\n\nconst Steps = () => {\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n  const calculateProgress = () => {\n    let value = 1;\n    switch (pathname) {\n      case '/':\n        value = 1;\n        return value;\n      case '/summary':\n        value = 50;\n        return value;\n      case '/total':\n        value = 100;\n        return value;\n    }\n  };\n\n  return (\n    <>\n      <section className=\"flex justify-between mb-5\">\n        {steps.map(({ step, name, url }) => {\n          return (\n            <button\n              onClick={() => {\n                navigate(url);\n              }}\n              className=\"text-2xl font-bold\"\n              key={step}\n            >\n              {name}\n            </button>\n          );\n        })}\n      </section>\n\n      <section className=\"bg-gray-100 mb-100\">\n        <div\n          className={`rounded-full bg-amber-500 text-xs leading-none h-2 text-center text-white ]`}\n          style={{\n            width: `${calculateProgress()}%`,\n          }}\n        ></div>\n      </section>\n    </>\n  );\n};\n\nexport { Steps };\n", "import { useContext, useEffect, useState } from 'react';\nimport { QuioscoContext } from '../../context/quiosco';\nimport Modal from 'react-modal';\ntype Props = {};\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\nModal.setAppElement('body');\n\nconst ModalProduct = (props: Props) => {\n  const {\n    toggleProductModal,\n    productSelected,\n    productModal,\n    handleUpdateOrders,\n    orders,\n    handleEditQuantities,\n  } = useContext(QuioscoContext);\n  const [quantity, setQuantity] = useState(1);\n\n  const [editProduct, setEditProduct] = useState(false);\n\n  useEffect(() => {\n    // if it exists in the orders, set quantity to the quantity in the orders\n    if (orders.some((order) => order.id === productSelected?.id)) {\n      const productToEdit = orders.find(\n        (order) => order.id === productSelected?.id\n      )!;\n      setEditProduct(true);\n      setQuantity(productToEdit.quantity);\n      return;\n    }\n    setEditProduct(false);\n  }, [orders, productSelected]);\n\n  return (\n    <Modal\n      isOpen={productModal}\n      style={customStyles}\n      contentLabel=\"Example Modal\"\n    >\n      <section className=\"gap-10 md:flex\">\n        <section className=\"md:w-1/3\">\n          <img\n            width={300}\n            height={400}\n            alt={`Imagen Platillo ${productSelected?.name}`}\n            src={`/assets/img/${productSelected?.image}.jpg`}\n          />\n        </section>\n        <section className=\"md:w-2/3\">\n          <section className=\"flex justify-end\">\n            <button onClick={() => toggleProductModal()}>\n              <svg\n                className=\"w-6 h-6\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M6 18L18 6M6 6l12 12\"\n                ></path>\n              </svg>\n            </button>\n          </section>\n          <h1 className=\"mt-5 text-3xl font-bold\">{productSelected?.name}</h1>\n          <p className=\"mt-5 text-5xl font-black text-amber-500\">\n            {productSelected?.price}\n          </p>\n          <section className=\"flex gap-4 mt-5\">\n            <button\n              onClick={() => {\n                if (quantity <= 1) return;\n                setQuantity(quantity - 1);\n              }}\n            >\n              <svg\n                className=\"w-7 h-7\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M15 12H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"\n                />\n              </svg>\n            </button>\n\n            <p className=\"text-3xl\">{quantity}</p>\n\n            <button\n              onClick={() => {\n                if (quantity >= 5) return;\n                setQuantity(quantity + 1);\n              }}\n            >\n              <svg\n                className=\"w-7 h-7\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"\n                ></path>\n              </svg>\n            </button>\n          </section>\n\n          <button\n            type=\"button\"\n            className=\"w-full p-3 mt-3 font-bold text-white uppercase bg-indigo-600 rounded hover:bg-indigo-800\"\n            onClick={() => {\n              if (editProduct) {\n                handleEditQuantities(productSelected?.id!, quantity);\n                toggleProductModal();\n                return;\n              }\n              handleUpdateOrders({\n                id: productSelected?.id!,\n                name: productSelected?.name!,\n                price: productSelected?.price!,\n                image: productSelected?.image!,\n                quantity,\n              });\n              toggleProductModal();\n              setQuantity(1);\n            }}\n          >\n            {editProduct ? 'Editar' : 'Agregar'}\n          </button>\n        </section>\n      </section>\n    </Modal>\n  );\n};\n\nexport default ModalProduct;\n", "import { PrismaClient } from \"@prisma/client\"\n\nlet db: PrismaClient\n\ndeclare global {\n  var __db: PrismaClient | undefined\n}\n\n// this is needed because in development we don't want to restart\n// the server with every change, but we want to make sure we don't\n// create a new connection to the DB with every change either.\nif (process.env.NODE_ENV === \"production\") {\n  db = new PrismaClient()\n  db.$connect()\n} else {\n  if (!global.__db) {\n    global.__db = new PrismaClient()\n    global.__db.$connect()\n  }\n  db = global.__db\n}\n\nexport { db }\n", "import { ProductSummary } from '../components/quiosco/ProductSummary';\nimport type { LoaderArgs, MetaFunction } from '@remix-run/node';\nimport { useContext } from 'react';\nimport { QuioscoContext } from '~/context/quiosco';\nimport { db } from '~/utils/db.server';\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: 'Resumen de pedido',\n    description: 'Aqu\u00ED puedes ver el resumen de tu pedido',\n  };\n};\n\nexport const loader = async (args: LoaderArgs) => {\n  const orders = await db.order.findMany();\n  return orders;\n};\n\nexport default function Summary() {\n  const { orders } = useContext(QuioscoContext);\n  return (\n    <div>\n      <h1 className=\"text-4xl font-black\">Resumen</h1>\n      <p className=\"my-10 text-2xl\">Revisa tu pedido</p>\n      {orders.length === 0 ? (\n        <p className=\"text-2xl text-center\">No hay productos en el carrito</p>\n      ) : (\n        orders.map((order) => <ProductSummary order={order} key={order.id} />)\n      )}\n    </div>\n  );\n}\n", "import { useContext } from 'react';\nimport { QuioscoContext } from '../../context/quiosco';\n\ntype Props = {\n  order: any;\n};\n\nexport const ProductSummary = ({ order }: Props) => {\n  const { handleDeleteProduct, toggleProductModal, setProductSelected } =\n    useContext(QuioscoContext);\n  return (\n    <section className=\"flex items-center gap-10 p-3 mb-3 border shadow\">\n      <figure className=\"md:w-1/6\">\n        <img\n          width={300}\n          height={400}\n          alt={`Imagen Platillo ${order.name}`}\n          src={`/assets/img/${order.image}.jpg`}\n        />\n      </figure>\n      <section className=\"md:w-4/6\">\n        <p className=\"text-3xl font-bold\">{order.name}</p>\n        <p className=\"mt-2 text-xl font-bold\">Cantidad: {order.quantity}</p>\n        <p className=\"mt-2 text-xl font-bold text-amber-700\">\n          Precio: {order.price}\n        </p>\n        <p className=\"mt-2 text-lg font-bold text-gray-800\">\n          Subtotal: {order.price * order.quantity}\n        </p>\n      </section>\n\n      <section className=\"md:w-1/6\">\n        <button\n          className=\"flex w-full gap-2 px-5 py-2 font-bold text-gray-200 uppercase rounded shadow-md bg-sky-700\"\n          onClick={() => {\n            setProductSelected(order);\n            toggleProductModal();\n          }}\n        >\n          <svg\n            className=\"w-6 h-6\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"\n            ></path>\n          </svg>\n          Editar\n        </button>\n        <button\n          className=\"flex w-full gap-2 px-5 py-2 mt-3 font-bold text-gray-200 uppercase bg-red-700 rounded shadow-md\"\n          onClick={() => handleDeleteProduct(order.id)}\n        >\n          <svg\n            className=\"w-6 h-6\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n            ></path>\n          </svg>\n          Eliminar\n        </button>\n      </section>\n    </section>\n  );\n};\n", "import { useLoaderData } from '@remix-run/react';\nimport type { MetaFunction } from '@remix-run/node';\nimport { Product } from '~/components/quiosco/Product';\nimport type { Product as ProductType } from '@prisma/client';\nimport { useContext } from 'react';\nimport { QuioscoContext } from '~/context/quiosco';\nimport { db } from '~/utils/db.server';\nimport type { LoaderArgs } from '@remix-run/node';\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: 'Quiosco Menu',\n    description: 'Quiosco Cafeter\u00EDa, una comida r\u00E1pida y de calidad para ti',\n  };\n};\nexport const loader = async (args: LoaderArgs) => {\n  const products: ProductType[] = await db.product.findMany();\n  return products;\n};\n\nexport default function HomeLayout() {\n  const products = useLoaderData<typeof loader>();\n\n  const { categorySelected } = useContext(QuioscoContext);\n\n  const filteredProducts = products.filter(\n    (p) => p.categoryId === categorySelected.id\n  );\n\n  return (\n    <>\n      <h1 className=\"mt-4 text-4xl font-black\">\n        {categorySelected.name} \uD83E\uDD84\uD83E\uDD84\uD83E\uDD84\uD83E\uDD84\n      </h1>\n      <p className=\"my-10 text-2xl\">\n        Elige y personaliza tu pedido a continuaci\u00F3n.\n      </p>\n      <section className=\"grid grid-cols-2 gap-4 xl:grid-cols-3 2xl:grid-cols-4\">\n        {filteredProducts.map((product) => (\n          <Product key={product.id} product={product} />\n        ))}\n      </section>\n    </>\n  );\n}\n", "import type { Product as ProductType } from '@prisma/client';\nimport { useContext } from 'react';\nimport { QuioscoContext } from '~/context/quiosco';\n\ntype Props = {\n  product: ProductType;\n};\n\nconst Product = ({ product }: Props) => {\n  const { name, price, image, id } = product;\n  const { setProductSelected, toggleProductModal } = useContext(QuioscoContext);\n\n  return (\n    <section className=\"p-3 border\">\n      <figure>\n        <img\n          src={`/assets/img/${image}.jpg`}\n          alt={`Imagen Platillo ${name}`}\n          width={400}\n          height={500}\n        />\n        <figcaption className=\"p-5\">\n          <h3 className=\"text-2xl font-bold\">{name}</h3>\n          <p className=\"mt-5 text-4xl font-black text-amber-500\">\n            {/* {formatMoney(price, \"USD\")} */}${price}\n          </p>\n          <button\n            className=\"w-full p-3 mt-3 font-bold text-white uppercase bg-indigo-600 rounded hover:bg-indigo-800\"\n            onClick={() => {\n              // setProduct(product)\n              toggleProductModal();\n              setProductSelected(product);\n            }}\n          >\n            Agregar\n          </button>\n        </figcaption>\n      </figure>\n    </section>\n  );\n};\n\nexport { Product };\n", "import { useEffect, useContext, useCallback, useState } from 'react';\nimport { QuioscoContext } from '../context/quiosco/QuioscoContext';\nimport { Form } from '@remix-run/react';\nimport { redirect } from '@remix-run/node';\nimport type { ActionArgs, MetaFunction } from '@remix-run/node';\n\nimport { toast } from 'react-toastify';\nimport { db } from '~/utils/db.server';\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: 'Total',\n    description: 'Esta seccion es sobre el total del pedido',\n  };\n};\n\nexport const action = async ({ request }: ActionArgs) => {\n  const formData = await request.formData();\n\n  const name = formData.get('name') as string;\n  const orders = formData.get('orders') as string;\n  const total = formData.get('total') as string;\n  const date = Date.now().toString() as string;\n\n  await db.order.create({\n    data: {\n      name,\n      date,\n      total: Number(total),\n      order: JSON.parse(orders),\n    },\n  });\n\n  return redirect(`/`);\n};\n\nexport default function TotalPage() {\n  const { orders, totalPrice } = useContext(QuioscoContext);\n  const [name, setName] = useState('');\n\n  const isValidOrder = useCallback(() => {\n    return orders.length > 0 && name.length > 2;\n  }, [orders, name]);\n\n  useEffect(() => {\n    isValidOrder();\n  }, [orders, isValidOrder]);\n  return (\n    <>\n      <h1 className=\"text-4xl font-black\">Total y confirmar pedido</h1>\n      <p className=\"my-10 text-2xl\">Confirma tu pedido</p>\n      <Form\n        method=\"post\"\n        onSubmit={() => {\n          toast.success('Pedido realizado con exito');\n        }}\n      >\n        <section>\n          <label\n            htmlFor=\"name\"\n            className=\"block text-xl font-bold uppercase text-slate-800\"\n          >\n            Nombre\n          </label>\n          <input\n            id=\"name\"\n            name=\"name\"\n            type=\"text\"\n            className=\"w-full p-2 mt-3 bg-gray-200 rounded-md lg:w-1/3\"\n            autoComplete=\"off\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n        </section>\n        <section className=\"mt-10\">\n          <p className=\"text-3xl\">\n            Total a pagar: <span className=\"font-bold\">{totalPrice}</span>\n          </p>\n        </section>\n        <section className=\"mt-5\">\n          <input type=\"hidden\" name=\"total\" value={totalPrice} />\n          <input type=\"hidden\" name=\"orders\" value={JSON.stringify(orders)} />\n          <button\n            className={`${\n              !isValidOrder()\n                ? 'bg-indigo-100'\n                : 'bg-indigo-600 hover:bg-indigo-800'\n            } w-full lg:w-auto px-5 py-2 rounded uppercase font-bold text-gray-200 text-center`}\n            type=\"submit\"\n            disabled={!isValidOrder()}\n          >\n            Confirmar pedido\n          </button>\n        </section>\n      </Form>\n    </>\n  );\n}\n", "export default {'version':'1e6c819f','entry':{'module':'/build/entry.client-YJ7GZFUP.js','imports':['/build/_shared/chunk-E5YTFSIB.js','/build/_shared/chunk-O34PB6WS.js','/build/_shared/chunk-4BT3XYWX.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-4KEQ7KHM.js','imports':['/build/_shared/chunk-BUWU6GBO.js','/build/_shared/chunk-O7Y4XBPT.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-GMFXXLRP.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/summary':{'id':'routes/summary','parentId':'root','path':'summary','index':undefined,'caseSensitive':undefined,'module':'/build/routes/summary-SOFJ5AUB.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/total':{'id':'routes/total','parentId':'root','path':'total','index':undefined,'caseSensitive':undefined,'module':'/build/routes/total-4DKC3426.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-1E6C819F.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/summary.tsx\";\nimport * as route2 from \"./routes/index.tsx\";\nimport * as route3 from \"./routes/total.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/summary\": {\n      id: \"routes/summary\",\n      parentId: \"root\",\n      path: \"summary\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/total\": {\n      id: \"routes/total\",\n      parentId: \"root\",\n      path: \"total\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    }\n  };"],
  "mappings": "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",
  "names": ["import_react", "import_react", "import_react", "import_react", "action", "import_react", "import_react", "Modal", "import_react_toastify", "loader", "meta", "import_react", "import_react", "meta", "loader", "loader", "meta", "import_react", "import_react", "import_react", "meta", "loader", "meta", "import_react", "import_react", "import_react_toastify", "meta"]
}
